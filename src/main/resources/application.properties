server.port=8080
spring.application.name=sharding-jdbc-simple-demo
server.servlet.context-path=/sharding-jdbc-simple-demo
spring.http.encoding.enabled=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.force=true

spring.main.allow-bean-definition-overriding=true



spring.shardingsphere.datasource.names=m1
#分片规则配置
#数据源配置
spring.shardingsphere.datasource.m1.type = com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://182.92.217.138:3306/order_db?useUnicode=true

spring.shardingsphere.datasource.m1.username=yiqinxuan
spring.shardingsphere.datasource.m1.password=Lzslov123!

#指定t_order表的数据分库情况，配置数据节点
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=m1.t_order_$->{1..2}

#指定t_order表的主键生成策略为SNOWFLAKE
spring.shardingsphere.sharding.tables.t_order.key-generator.column==order_id
spring.shardingsphere.sharding.tables.t_order.key-generator.type==SNOWFLAKE


#指定t_order表的分片策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 2 + 1}

spring.shardingsphere.props.sql.show=true


logging.level.root=info
logging.level.org.springframework.web=info
logging.level.com.kingmao.sharding=debug
logging.level.druid.sql=debug